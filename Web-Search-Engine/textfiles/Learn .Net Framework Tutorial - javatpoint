learn .net framework tutorial - javatpoint ? scroll to top home .net c# ado.net asp.net sql server f# angularjs node.js express.js sql html javascript ajax quiz projects interview q comment forum training .net framework .net framework clr fcl c# tutorial c# tutorial java vs c# c# history c# features c# example c# variables c# data types c# operators c# keywords c# control statement c# if-else c# switch c# for loop c# while loop c# do-while loop c# break c# continue c# goto c# comments c# function c# function c# call by value c# call by reference c# out parameter c# arrays c# arrays c# array to function c# multidimensional array c# jagged arrays c# params c# array class c# command line args c# object class c# object and class c# constructor c# destructor c# this c# static c# static class c# static constructor c# structs c# enum c# properties c# properties c# inheritance c# inheritance c# aggregation c# polymorphism c# member overloading c# method overriding c# base c# polymorphism c# sealed c# abstraction c# abstract c# interface c# namespace c# namespaces c# access modifiers c# encapsulation c# strings c# strings c# exception handling c# exception handling c# try/catch c# finally c# custom exception c# checked unchecked c# systemexception c# file io c# filestream c# streamwriter c# streamreader c# textwriter c# textreader c# binarywriter c# binaryreader c# stringwriter c# stringreader c# fileinfo c# directoryinfo c# serialization c# deserialization c# system.io c# collections c# collections c# list<t> c# hashset<t> c# sortedset<t> c# stack<t> c# queue<t> c# linkedlist<t> c# dictionary<k,v> c# sorteddictionary<k,v> c# sortedlist<k,v> c# generics c# generics c# delegates c# delegates c# reflection c# reflection anonymous function anonymous function c# multithreading c# multithreading c# thread life cycle c# thread class c# main thread c# thread example c# thread sleep c# thread abort c# thread join c# thread name c# threadpriority c# synchronization c# synchronization c# web service web services in c# c# misc events in c# regular expression in c# datetime in c# type casting in c# listbox control in c# c# readline() method design patterns c# c# operator overloading c# new features c# new features (40+) c# programs c# programs fibonacci series prime number palindrome number factorial armstrong number sum of digits reverse number swap number decimal to binary number in characters alphabet triangle number triangle fibonacci triangle c# interview questions c# interview questions ado.net tutorial ado.net tutorial (10+) asp.net tutorial asp.net tutorial (50+) next ? .net framework .net is a framework to develop software applications. it is designed and developed by microsoft and the first beta version released in 2000. it is used to develop applications for web, windows, phone. moreover, it provides a broad range of functionalities and support. this framework contains a large number of class libraries known as framework class library (fcl). the software programs written in .net are executed in the execution environment, which is called clr (common language runtime). these are the core and essential parts of the .net framework. this framework provides various services like memory management, networking, security, memory management, and type-safety. the .net framework supports more than 60 programming languages such as c#, f#, vb.net, j#, vc++, jscript.net, apl, cobol, perl, oberon, ml, pascal, eiffel, smalltalk, python, cobra, ada, etc. following is the .net framework stack that shows the modules and components of the framework. the .net framework is composed of four main components: common language runtime (clr) framework class library (fcl), core languages (winforms, asp.net, and ado.net), and other modules (wcf, wpf, wf, card space, linq, entity framework, parallel linq, task parallel library, etc.) clr (common language runtime) it is a program execution engine that loads and executes the program. it converts the program into native code. it acts as an interface between the framework and operating system. it does exception handling, memory management, and garbage collection. moreover, it provides security, type-safety, interoperability, and portablility. a list of clr components are given below: fcl (framework class library) it is a standard library that is a collection of thousands of classes and used to build an application. the bcl (base class library) is the core of the fcl and provides basic functionalities. winforms windows forms is a smart client technology for the .net framework, a set of managed libraries that simplify common application tasks such as reading and writing to the file system. asp.net asp.net is a web framework designed and developed by microsoft. it is used to develop websites, web applications, and web services. it provides a fantastic integration of html, css, and javascript. it was first released in january 2002. ado.net ado.net is a module of .net framework, which is used to establish a connection between application and data sources. data sources can be such as sql server and xml. ado .net consists of classes that can be used to connect, retrieve, insert, and delete data. wpf (windows presentation foundation) windows presentation foundation (wpf) is a graphical subsystem by microsoft for rendering user interfaces in windows-based applications. wpf, previously known as "avalon", was initially released as part of .net framework 3.0 in 2006. wpf uses directx. wcf (windows communication foundation) it is a framework for building service-oriented applications. using wcf, you can send data as asynchronous messages from one service endpoint to another. wf (workflow foundation) windows workflow foundation (wf) is a microsoft technology that provides an api, an in-process workflow engine, and a rehostable designer to implement long-running processes as workflows within .net applications. linq (language integrated query) it is a query language, introduced in .net 3.5 framework. it is used to make the query for data sources with c# or visual basics programming languages. entity framework it is an orm based open source framework which is used to work with a database using .net objects. it eliminates a lot of developers effort to handle the database. it is microsoft's recommended technology to deal with the database. parallel linq parallel linq or plinq is a parallel implementation of linq to objects. it combines the simplicity and readability of linq and provides the power of parallel programming. it can improve and provide fast speed to execute the linq query by using all available computer capabilities. apart from the above features and libraries, .net includes other apis and model to improve and enhance the .net framework. in 2015, task parallel and task parallel libraries were added. in .net 4.5, a task-based asynchronous model was added. .net framework index .net framework .net framework clr fcl c# c# tutorial what is c# c++ vs c# java vs c# c# history c# features c# example c# variables c# data types c# operators c# keywords c# control statements c# if-else c# switch c# for loop c# while loop c# do-while loop c# break c# continue c# goto c# comments c# functions c# function c# call by value c# call by reference c# out parameter c# arrays c# arrays c# array to function c# multidimensional array c# jagged arrays c# params c# array class c# command line args c# objects and classes c# object and class c# constructor c# destructor c# this c# static c# static class c# static constructor c# structs c# enum c# properties c# properties c# inheritance c# inheritance c# aggregation c# polymorphism c# member overloading c# method overriding c# base c# polymorphism c# sealed c# abstraction c# abstract c# interface c# namespace c# namespaces c# access modifiers c# encapsulation c# strings c# strings c# string functions string clone() string compare() string compareordinal() string compareto() string concat() string contains() string copy() string copyto() string endswith() string equals() string format() string getenumerator() string gethashcode() string gettype() string gettypecode() string indexof() string insert() string intern() string isinterned() string isnormalized() string normalize() string isnullorempty() isnullorwhitespace() string join() string lastindexof() string lastindexofany() string padleft() string padright() string remove() string replace() string split() string startswith() string substring() string tochararray() string tolower() string tolowerinvariant() string tostring() string toupper() string toupperinvariant() string trim() string trimend() string trimstart() c# exceptions c# exception handling c# try/catch c# finally c# custom exception c# checked unchecked c# systemexception c# file i/o c# filestream c# streamwriter c# streamreader c# textwriter c# textreader c# binarywriter c# binaryreader c# stringwriter c# stringreader c# fileinfo c# directoryinfo c# serialization c# deserialization c# system.io c# collections c# collections c# list<t> c# hashset<t> c# sortedset<t> c# stack<t> c# queue<t> c# linkedlist<t> c# dictionary<k,v> c# sorteddictionary<k,v> c# sortedlist<k,v> c# generics c# generics c# delegates c# delegates c# reflection c# reflection c# anonymous functions anonymous function c# multithreading c# multithreading c# thread life cycle c# thread class c# main thread c# thread example c# thread sleep c# thread abort c# thread join c# thread name c# threadpriority c# synchronization c# synchronization c# new features c# new features (40+) c# 2.0 partial types iterators nullable types delegate covariance delegate inference static classes method group conversions (delegates) c# 3.0 anonymous types extension methods query expression partial method implicitly typed local variables object and collection initializers auto-implemented properties lambda expression expression trees c# 4.0 dynamic binding named and optional arguments generic co and contravariance embedded interop types ("nopia") c# 5.0 asynchronous methods caller info attributes c# 6.0 using static directive exception filters await in catch/finally blocks auto property initializers default values for getter-only properties expression-bodied members null propagator string interpolation nameof operator dictionary initializer compiler-as-a-service (roslyn) c# 7.0 pattern matching tuples deconstruction local functions digit separator binary literals ref returns and locals expression bodied constructors and finalizers expression bodied getters and setters out variables generalized async return types c# 7.1 async main default expressions c# programs list c# programs fibonacci series prime number palindrome number factorial armstrong number sum of digits reverse number swap number decimal to binary number in characters alphabet triangle number triangle fibonacci triangle c# interview questions c# interview questions ado.net tutorial ado.net tutorial ado.net introduction ado.net data providers ado.net sql server ado.net connection ado.net command ado.net datareader ado.net dataset ado.net dataadapter ado.net datatables ado.net wf example ado.net mvc example ado.net interview questions ado.net interview questions asp.net tutorial asp .net tutorial asp .net introduction asp.net life cycle asp.net web forms asp.net wf introduction asp.net wf features asp.net wf project asp.net wf example asp.net server controls asp.net label asp.net textbox asp.net button asp.net hyperlink asp.net radiobutton asp.net calender asp.net checkbox asp.net linkbutton asp.net fileupload multiple fileupload asp.net download file asp.net cookie asp.net session asp.net dropdownlist asp.net datalist asp.net datagrid wf user registration wf events handling wf authentication wf model binding html server controls asp.net validation comparevalidator rangevalidator regularexpressionvalidator requiredfieldvalidator validationsummary asp.net mvc asp.net mvc mvc project mvc controller mvc actions mvc action selectors mvc action filters mvc model mvc model binding mvc view mvc validation mvc entity framework mvc authentication mvc bootstrap mvc routing mvc scaffolding mvc viewbag asp.net razor asp.net razor razor code expressions razor code blocks razor control structures razor html helpers razor partial views asp.net interview questions asp.net interview next topic.net common language runtime next ? for videos join our youtube channel: join now feedback send your feedback to [email protected] help others, please share learn latest tutorials splunk spss swagger transact-sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular 7 blockchain git machine learning devops b.tech / mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c++ java .net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services. mail us on [email protected], to get more information about given services. website designing website development java development php development wordpress graphic designing logo digital marketing on page and off page seo ppc content development corporate training classroom and online training data entry training for college campus javatpoint offers college campus training on core java, advance java, .net, android, hadoop, php, web technology and python. please mail your requirement at [email protected] duration: 1 week to 2 week like/subscribe us for latest updates or newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c++ tutoriallearn c# tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint.comhindi100.comlyricsia.comquoteperson.comjobandplacement.com our services website development android development website designing digital marketing summer training industrial training college campus training contact address: g-13, 2nd floor, sec-3 noida, up, 201301, india contact no: 0120-4256464, 9990449935contact us subscribe us privacy policysitemap about me ? copyright 2011-2021 www.javatpoint.com. all rights reserved. developed by javatpoint.